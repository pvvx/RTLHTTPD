
#httpd options
GZIP_COMPRESSION ?= no
COMPRESS_W_YUI ?= no
YUI-COMPRESSOR ?= /usr/bin/yui-compressor
USE_HEATSHRINK ?= yes
HTTPD_WEBSOCKETS ?= yes
#USE_OPENSDK ?= no
HTTPD_MAX_CONNECTIONS ?= 5
#For FreeRTOS
HTTPD_STACKSIZE ?= 4096

LIBRTLHTTPD_PATH ?= librtlhttpd/


FREERTOS ?= yes

INCLUDES += $(LIBRTLHTTPD_PATH)include $(LIBRTLHTTPD_PATH)espfs $(LIBRTLHTTPD_PATH)lib/heatshrink

ADD_SRC_C += $(LIBRTLHTTPD_PATH)soc/soc_rtl8710_httpd_func.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)espfs/espfs.c $(LIBRTLHTTPD_PATH)espfs/heatshrink_decoder.c
#ADD_SRC_C += $(LIBRTLHTTPD_PATH)core/sha1.c 
ADD_SRC_C += $(LIBRTLHTTPD_PATH)core/base64.c $(LIBRTLHTTPD_PATH)core/auth.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)core/httpd-freertos.c $(LIBRTLHTTPD_PATH)core/httpd.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)core/httpdespfs.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)core/uptime.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)util/captdns.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)util/cgiwebsocket.c
ADD_SRC_C += $(LIBRTLHTTPD_PATH)util/cgiflash_rtl.c


CFLAGS += -DFREERTOS
CFLAGS += -DHTTPD_MAX_CONNECTIONS=$(HTTPD_MAX_CONNECTIONS)
CFLAGS += -DHTTPD_STACKSIZE=$(HTTPD_STACKSIZE)

ifeq ("$(GZIP_COMPRESSION)","yes")
CFLAGS		+= -DGZIP_COMPRESSION
endif

ifeq ("$(USE_HEATSHRINK)","yes")
CFLAGS		+= -DESPFS_HEATSHRINK
endif

ifeq ("$(HTTPD_WEBSOCKETS)","yes")
CFLAGS		+= -DHTTPD_WEBSOCKETS
endif


